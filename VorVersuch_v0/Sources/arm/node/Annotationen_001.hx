package arm.node;

@:keep class Annotationen_001 extends armory.logicnode.LogicTree {

	var functionNodes:Map<String, armory.logicnode.FunctionNode>;

	var functionOutputNodes:Map<String, armory.logicnode.FunctionOutputNode>;

	public function new() {
		super();
		name = "Annotationen_001";
		this.functionNodes = new Map();
		this.functionOutputNodes = new Map();
		notifyOnAdd(add);
	}

	override public function add() {
		var _CanvasSetVisible_002 = new armory.logicnode.CanvasSetVisibleNode(this);
		var _CanvasSetLocation_002 = new armory.logicnode.CanvasSetLocationNode(this);
		var _CanvasGetLocation = new armory.logicnode.CanvasGetLocationNode(this);
		var _OnCanvasElement = new armory.logicnode.OnCanvasElementNode(this);
		_OnCanvasElement.property0 = "click";
		_OnCanvasElement.property1 = "released";
		_OnCanvasElement.property2 = "left";
		_OnCanvasElement.addInput(new armory.logicnode.StringNode(this, "measure"), 0);
		_OnCanvasElement.addOutputs([_CanvasGetLocation]);
		_CanvasGetLocation.addInput(_OnCanvasElement, 0);
		_CanvasGetLocation.addInput(new armory.logicnode.StringNode(this, "messpunkt"), 0);
		_CanvasGetLocation.addOutputs([_CanvasSetLocation_002]);
		_CanvasGetLocation.addOutputs([_CanvasSetLocation_002]);
		_CanvasGetLocation.addOutputs([_CanvasSetLocation_002]);
		_CanvasSetLocation_002.addInput(_CanvasGetLocation, 0);
		_CanvasSetLocation_002.addInput(new armory.logicnode.StringNode(this, "1"), 0);
		_CanvasSetLocation_002.addInput(_CanvasGetLocation, 1);
		_CanvasSetLocation_002.addInput(_CanvasGetLocation, 2);
		_CanvasSetLocation_002.addOutputs([_CanvasSetVisible_002]);
		_CanvasSetVisible_002.addInput(_CanvasSetLocation_002, 0);
		_CanvasSetVisible_002.addInput(new armory.logicnode.StringNode(this, "1"), 0);
		_CanvasSetVisible_002.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_002.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SendEvent_002 = new armory.logicnode.SendEventNode(this);
		var _CanvasSetText_007 = new armory.logicnode.CanvasSetTextNode(this);
		var _Branch_002 = new armory.logicnode.BranchNode(this);
		var _OnUpdate_008 = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate_008.property0 = "Update";
		_OnUpdate_008.addOutputs([_Branch_002]);
		_Branch_002.addInput(_OnUpdate_008, 0);
		var _InArray_002 = new armory.logicnode.ArrayInArrayNode(this);
		var _Array_Object__002 = new armory.logicnode.ArrayObjectNode(this);
		var _Object_019 = new armory.logicnode.ObjectNode(this);
		_Object_019.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_019.addOutputs([_Array_Object__002]);
		_Array_Object__002.addInput(_Object_019, 0);
		var _Object_018 = new armory.logicnode.ObjectNode(this);
		_Object_018.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_018.addOutputs([_Array_Object__002]);
		_Array_Object__002.addInput(_Object_018, 0);
		var _Object_017 = new armory.logicnode.ObjectNode(this);
		_Object_017.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_017.addOutputs([_Array_Object__002]);
		_Array_Object__002.addInput(_Object_017, 0);
		var _Object_012 = new armory.logicnode.ObjectNode(this);
		_Object_012.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_012.addOutputs([_Array_Object__002]);
		_Array_Object__002.addInput(_Object_012, 0);
		_Array_Object__002.addOutputs([_InArray_002]);
		_Array_Object__002.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_InArray_002.addInput(_Array_Object__002, 0);
		var _PickObject_009 = new armory.logicnode.PickObjectNode(this);
		var _MouseCoords_009 = new armory.logicnode.MouseCoordsNode(this);
		_MouseCoords_009.addOutputs([_PickObject_009]);
		_MouseCoords_009.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_MouseCoords_009.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_PickObject_009.addInput(_MouseCoords_009, 0);
		var _InArray_001 = new armory.logicnode.ArrayInArrayNode(this);
		var _Array_Object__001 = new armory.logicnode.ArrayObjectNode(this);
		var _Object_014 = new armory.logicnode.ObjectNode(this);
		_Object_014.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_014.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_014, 0);
		var _Object_013 = new armory.logicnode.ObjectNode(this);
		_Object_013.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_013.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_013, 0);
		var _Object_015 = new armory.logicnode.ObjectNode(this);
		_Object_015.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_015.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_015, 0);
		var _Object_016 = new armory.logicnode.ObjectNode(this);
		_Object_016.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_016.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_016, 0);
		var _Object_021 = new armory.logicnode.ObjectNode(this);
		_Object_021.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_021.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_021, 0);
		var _Object_022 = new armory.logicnode.ObjectNode(this);
		_Object_022.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_022.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_022, 0);
		var _Object_023 = new armory.logicnode.ObjectNode(this);
		_Object_023.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_023.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_023, 0);
		var _Object_020 = new armory.logicnode.ObjectNode(this);
		_Object_020.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_Object_020.addOutputs([_Array_Object__001]);
		_Array_Object__001.addInput(_Object_020, 0);
		_Array_Object__001.addOutputs([_InArray_001]);
		_Array_Object__001.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_InArray_001.addInput(_Array_Object__001, 0);
		_InArray_001.addInput(_PickObject_009, 0);
		var _Branch_001 = new armory.logicnode.BranchNode(this);
		var _OnUpdate_007 = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate_007.property0 = "Update";
		_OnUpdate_007.addOutputs([_Branch_001]);
		_Branch_001.addInput(_OnUpdate_007, 0);
		_Branch_001.addInput(_InArray_001, 0);
		var _CanvasSetText_006 = new armory.logicnode.CanvasSetTextNode(this);
		_CanvasSetText_006.addInput(_Branch_001, 0);
		_CanvasSetText_006.addInput(new armory.logicnode.StringNode(this, "annotation"), 0);
		_CanvasSetText_006.addInput(new armory.logicnode.StringNode(this, "Strahlteiler"), 0);
		var _SendEvent = new armory.logicnode.SendEventNode(this);
		_SendEvent.addInput(_CanvasSetText_006, 0);
		_SendEvent.addInput(new armory.logicnode.StringNode(this, "annotation_on"), 0);
		_SendEvent.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SendEvent.addOutputs([new armory.logicnode.NullNode(this)]);
		_CanvasSetText_006.addOutputs([_SendEvent]);
		_Branch_001.addOutputs([_CanvasSetText_006]);
		_Branch_001.addOutputs([new armory.logicnode.NullNode(this)]);
		_InArray_001.addOutputs([_Branch_001]);
		_PickObject_009.addOutputs([_InArray_001, _InArray_002]);
		_PickObject_009.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_InArray_002.addInput(_PickObject_009, 0);
		_InArray_002.addOutputs([_Branch_002]);
		_Branch_002.addInput(_InArray_002, 0);
		_Branch_002.addOutputs([_CanvasSetText_007]);
		_Branch_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_CanvasSetText_007.addInput(_Branch_002, 0);
		_CanvasSetText_007.addInput(new armory.logicnode.StringNode(this, "annotation"), 0);
		_CanvasSetText_007.addInput(new armory.logicnode.StringNode(this, "Halter des Strahlteiler"), 0);
		_CanvasSetText_007.addOutputs([_SendEvent_002]);
		_SendEvent_002.addInput(_CanvasSetText_007, 0);
		_SendEvent_002.addInput(new armory.logicnode.StringNode(this, "annotation_on"), 0);
		_SendEvent_002.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SendEvent_002.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SendEvent_001 = new armory.logicnode.SendEventNode(this);
		var _Gate = new armory.logicnode.GateNode(this);
		_Gate.property0 = "Equal";
		_Gate.property1 = 9.999999747378752e-05;
		var _OnUpdate_009 = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate_009.property0 = "Update";
		_OnUpdate_009.addOutputs([_Gate]);
		_Gate.addInput(_OnUpdate_009, 0);
		var _Object = new armory.logicnode.ObjectNode(this);
		_Object.addInput(new armory.logicnode.ObjectNode(this, "Weltkugel_Maus_Navigation"), 0);
		_Object.addOutputs([_Gate]);
		_Gate.addInput(_Object, 0);
		var _PickObject_010 = new armory.logicnode.PickObjectNode(this);
		var _MouseCoords_011 = new armory.logicnode.MouseCoordsNode(this);
		_MouseCoords_011.addOutputs([_PickObject_010]);
		_MouseCoords_011.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_MouseCoords_011.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_PickObject_010.addInput(_MouseCoords_011, 0);
		_PickObject_010.addOutputs([_Gate]);
		_PickObject_010.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_Gate.addInput(_PickObject_010, 0);
		_Gate.addOutputs([_SendEvent_001]);
		_Gate.addOutputs([new armory.logicnode.NullNode(this)]);
		_SendEvent_001.addInput(_Gate, 0);
		_SendEvent_001.addInput(new armory.logicnode.StringNode(this, "annotation_off"), 0);
		_SendEvent_001.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SendEvent_001.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetVisible_001 = new armory.logicnode.CanvasSetVisibleNode(this);
		var _CanvasSetLocation_001 = new armory.logicnode.CanvasSetLocationNode(this);
		var _CanvasSetVisible = new armory.logicnode.CanvasSetVisibleNode(this);
		var _CanvasSetLocation = new armory.logicnode.CanvasSetLocationNode(this);
		var _OnEvent_001 = new armory.logicnode.OnEventNode(this);
		_OnEvent_001.property0 = "annotation_on";
		_OnEvent_001.addOutputs([_CanvasSetLocation]);
		_CanvasSetLocation.addInput(_OnEvent_001, 0);
		var _String = new armory.logicnode.StringNode(this);
		_String.addInput(new armory.logicnode.StringNode(this, "annotation"), 0);
		_String.addOutputs([_CanvasSetLocation, _CanvasSetVisible]);
		_CanvasSetLocation.addInput(_String, 0);
		var _SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		var _MouseCoords_010 = new armory.logicnode.MouseCoordsNode(this);
		_MouseCoords_010.addOutputs([_SeparateXYZ]);
		_MouseCoords_010.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_MouseCoords_010.addOutputs([new armory.logicnode.IntegerNode(this, 0)]);
		_SeparateXYZ.addInput(_MouseCoords_010, 0);
		_SeparateXYZ.addOutputs([_CanvasSetLocation, _CanvasSetLocation_001]);
		var _Math = new armory.logicnode.MathNode(this);
		_Math.property0 = "Add";
		_Math.property1 = "false";
		_Math.addInput(_SeparateXYZ, 1);
		_Math.addInput(new armory.logicnode.FloatNode(this, -100.0), 0);
		_Math.addOutputs([_CanvasSetLocation, _CanvasSetLocation_001]);
		_SeparateXYZ.addOutputs([_Math]);
		_SeparateXYZ.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_CanvasSetLocation.addInput(_SeparateXYZ, 0);
		_CanvasSetLocation.addInput(_Math, 0);
		_CanvasSetLocation.addOutputs([_CanvasSetVisible]);
		_CanvasSetVisible.addInput(_CanvasSetLocation, 0);
		_CanvasSetVisible.addInput(_String, 0);
		_CanvasSetVisible.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible.addOutputs([_CanvasSetLocation_001]);
		_CanvasSetLocation_001.addInput(_CanvasSetVisible, 0);
		var _String_002 = new armory.logicnode.StringNode(this);
		_String_002.addInput(new armory.logicnode.StringNode(this, "linie"), 0);
		_String_002.addOutputs([_CanvasSetLocation_001, _CanvasSetVisible_001]);
		_CanvasSetLocation_001.addInput(_String_002, 0);
		_CanvasSetLocation_001.addInput(_SeparateXYZ, 0);
		_CanvasSetLocation_001.addInput(_Math, 0);
		_CanvasSetLocation_001.addOutputs([_CanvasSetVisible_001]);
		_CanvasSetVisible_001.addInput(_CanvasSetLocation_001, 0);
		_CanvasSetVisible_001.addInput(_String_002, 0);
		_CanvasSetVisible_001.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_CanvasSetVisible_001.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetVisible_005 = new armory.logicnode.CanvasSetVisibleNode(this);
		var _CanvasSetVisible_004 = new armory.logicnode.CanvasSetVisibleNode(this);
		var _OnEvent = new armory.logicnode.OnEventNode(this);
		_OnEvent.property0 = "annotation_off";
		_OnEvent.addOutputs([_CanvasSetVisible_004]);
		_CanvasSetVisible_004.addInput(_OnEvent, 0);
		_CanvasSetVisible_004.addInput(new armory.logicnode.StringNode(this, "annotation"), 0);
		_CanvasSetVisible_004.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_004.addOutputs([_CanvasSetVisible_005]);
		_CanvasSetVisible_005.addInput(_CanvasSetVisible_004, 0);
		_CanvasSetVisible_005.addInput(new armory.logicnode.StringNode(this, "linie"), 0);
		_CanvasSetVisible_005.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_CanvasSetVisible_005.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetProperty_004 = new armory.logicnode.SetPropertyNode(this);
		var _OnInit_001 = new armory.logicnode.OnInitNode(this);
		_OnInit_001.addOutputs([_SetProperty_004]);
		_SetProperty_004.addInput(_OnInit_001, 0);
		_SetProperty_004.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SetProperty_004.addInput(new armory.logicnode.StringNode(this, "count"), 0);
		var _Integer_005 = new armory.logicnode.IntegerNode(this);
		_Integer_005.addInput(new armory.logicnode.IntegerNode(this, 0), 0);
		_Integer_005.addOutputs([_SetProperty_004]);
		_SetProperty_004.addInput(_Integer_005, 0);
		_SetProperty_004.addOutputs([new armory.logicnode.NullNode(this)]);
		var _RotateObject_002 = new armory.logicnode.RotateObjectNode(this);
		var _TranslateObject_010 = new armory.logicnode.TranslateObjectNode(this);
		var _SetProperty_005 = new armory.logicnode.SetPropertyNode(this);
		var _OnTimer = new armory.logicnode.OnTimerNode(this);
		_OnTimer.addInput(new armory.logicnode.FloatNode(this, 0.009999999776482582), 0);
		_OnTimer.addInput(new armory.logicnode.BooleanNode(this, true), 0);
		_OnTimer.addOutputs([_SetProperty_005]);
		_SetProperty_005.addInput(_OnTimer, 0);
		_SetProperty_005.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SetProperty_005.addInput(new armory.logicnode.StringNode(this, "count"), 0);
		var _Math_015 = new armory.logicnode.MathNode(this);
		_Math_015.property0 = "Add";
		_Math_015.property1 = "false";
		var _Integer_006 = new armory.logicnode.IntegerNode(this);
		var _GetProperty_002 = new armory.logicnode.GetPropertyNode(this);
		_GetProperty_002.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_GetProperty_002.addInput(new armory.logicnode.StringNode(this, "count"), 0);
		_GetProperty_002.addOutputs([_Integer_006]);
		_GetProperty_002.addOutputs([new armory.logicnode.StringNode(this, "")]);
		_Integer_006.addInput(_GetProperty_002, 0);
		_Integer_006.addOutputs([_Math_015]);
		_Math_015.addInput(_Integer_006, 0);
		_Math_015.addInput(new armory.logicnode.FloatNode(this, 0.10000000149011612), 0);
		var _Math_014 = new armory.logicnode.MathNode(this);
		_Math_014.property0 = "Sine";
		_Math_014.property1 = "false";
		_Math_014.addInput(_Math_015, 0);
		_Math_014.addInput(new armory.logicnode.FloatNode(this, 1.0), 0);
		var _Math_016 = new armory.logicnode.MathNode(this);
		_Math_016.property0 = "Multiply";
		_Math_016.property1 = "false";
		_Math_016.addInput(_Math_014, 0);
		_Math_016.addInput(new armory.logicnode.FloatNode(this, 0.15000000596046448), 0);
		var _Vector_002 = new armory.logicnode.VectorNode(this);
		_Vector_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_002.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_002.addInput(_Math_016, 0);
		_Vector_002.addOutputs([_TranslateObject_010]);
		_Math_016.addOutputs([_Vector_002]);
		var _Math_017 = new armory.logicnode.MathNode(this);
		_Math_017.property0 = "Multiply";
		_Math_017.property1 = "false";
		_Math_017.addInput(_Math_014, 0);
		_Math_017.addInput(new armory.logicnode.FloatNode(this, 0.05000000074505806), 0);
		var _Vector_004 = new armory.logicnode.VectorNode(this);
		_Vector_004.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_004.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_Vector_004.addInput(_Math_017, 0);
		_Vector_004.addOutputs([_RotateObject_002]);
		_Math_017.addOutputs([_Vector_004]);
		_Math_014.addOutputs([_Math_016, _Math_017]);
		_Math_015.addOutputs([_SetProperty_005, _Math_014]);
		_SetProperty_005.addInput(_Math_015, 0);
		_SetProperty_005.addOutputs([_TranslateObject_010]);
		_TranslateObject_010.addInput(_SetProperty_005, 0);
		_TranslateObject_010.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_TranslateObject_010.addInput(_Vector_002, 0);
		_TranslateObject_010.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_TranslateObject_010.addOutputs([_RotateObject_002]);
		_RotateObject_002.addInput(_TranslateObject_010, 0);
		_RotateObject_002.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_RotateObject_002.addInput(_Vector_004, 0);
		_RotateObject_002.addOutputs([new armory.logicnode.NullNode(this)]);
		var _CanvasSetText = new armory.logicnode.CanvasSetTextNode(this);
		var _CanvasSetLocation_004 = new armory.logicnode.CanvasSetLocationNode(this);
		var _CanvasSetLocation_003 = new armory.logicnode.CanvasSetLocationNode(this);
		var _OnUpdate = new armory.logicnode.OnUpdateNode(this);
		_OnUpdate.property0 = "Update";
		_OnUpdate.addOutputs([_CanvasSetLocation_003]);
		_CanvasSetLocation_003.addInput(_OnUpdate, 0);
		_CanvasSetLocation_003.addInput(new armory.logicnode.StringNode(this, "todo"), 0);
		var _Math_001 = new armory.logicnode.MathNode(this);
		_Math_001.property0 = "Multiply";
		_Math_001.property1 = "false";
		var _SeparateXYZ_001 = new armory.logicnode.SeparateVectorNode(this);
		var _WorldToScreenSpace = new armory.logicnode.WorldToScreenSpaceNode(this);
		var _GetLocation = new armory.logicnode.GetLocationNode(this);
		_GetLocation.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_GetLocation.addOutputs([_WorldToScreenSpace]);
		_WorldToScreenSpace.addInput(_GetLocation, 0);
		_WorldToScreenSpace.addOutputs([_SeparateXYZ_001]);
		_SeparateXYZ_001.addInput(_WorldToScreenSpace, 0);
		_SeparateXYZ_001.addOutputs([_Math_001]);
		var _Math_002 = new armory.logicnode.MathNode(this);
		_Math_002.property0 = "Multiply";
		_Math_002.property1 = "false";
		_Math_002.addInput(_SeparateXYZ_001, 1);
		_Math_002.addInput(new armory.logicnode.FloatNode(this, -540.0), 0);
		var _Math_004 = new armory.logicnode.MathNode(this);
		_Math_004.property0 = "Add";
		_Math_004.property1 = "false";
		_Math_004.addInput(_Math_002, 0);
		_Math_004.addInput(new armory.logicnode.FloatNode(this, -240.0), 0);
		_Math_004.addOutputs([_CanvasSetLocation_003]);
		var _Math_006 = new armory.logicnode.MathNode(this);
		_Math_006.property0 = "Add";
		_Math_006.property1 = "false";
		_Math_006.addInput(_Math_002, 0);
		_Math_006.addInput(new armory.logicnode.FloatNode(this, -130.0), 0);
		_Math_006.addOutputs([_CanvasSetLocation_004]);
		_Math_002.addOutputs([_Math_004, _Math_006]);
		_SeparateXYZ_001.addOutputs([_Math_002]);
		_SeparateXYZ_001.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_Math_001.addInput(_SeparateXYZ_001, 0);
		_Math_001.addInput(new armory.logicnode.FloatNode(this, 960.0), 0);
		_Math_001.addOutputs([_CanvasSetLocation_003, _CanvasSetLocation_004]);
		_CanvasSetLocation_003.addInput(_Math_001, 0);
		_CanvasSetLocation_003.addInput(_Math_004, 0);
		_CanvasSetLocation_003.addOutputs([_CanvasSetLocation_004]);
		_CanvasSetLocation_004.addInput(_CanvasSetLocation_003, 0);
		_CanvasSetLocation_004.addInput(new armory.logicnode.StringNode(this, "pfeiltodo"), 0);
		_CanvasSetLocation_004.addInput(_Math_001, 0);
		_CanvasSetLocation_004.addInput(_Math_006, 0);
		_CanvasSetLocation_004.addOutputs([_CanvasSetText]);
		_CanvasSetText.addInput(_CanvasSetLocation_004, 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "todo"), 0);
		_CanvasSetText.addInput(new armory.logicnode.StringNode(this, "insert the turquoise rotationstage"), 0);
		_CanvasSetText.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetVisible = new armory.logicnode.SetVisibleNode(this);
		_SetVisible.addInput(new armory.logicnode.NullNode(this), 0);
		_SetVisible.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_SetVisible.addInput(new armory.logicnode.BooleanNode(this, false), 0);
		_SetVisible.addOutputs([new armory.logicnode.NullNode(this)]);
	}
}