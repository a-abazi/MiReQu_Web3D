#version 100
#extension GL_EXT_draw_buffers : require
precision mediump float;
precision highp int;

varying highp vec3 wnormal;

highp vec2 octahedronWrap(highp vec2 v)
{
    return (vec2(1.0) - abs(v.yx)) * vec2((v.x >= 0.0) ? 1.0 : (-1.0), (v.y >= 0.0) ? 1.0 : (-1.0));
}

highp float packFloatInt16(highp float f, uint i)
{
    return (0.06248569488525390625 * f) + (0.06250095367431640625 * float(i));
}

highp float packFloat2(highp float f1, highp float f2)
{
    return floor(f1 * 255.0) + min(f2, 0.9900000095367431640625);
}

void main()
{
    highp vec3 n = normalize(wnormal);
    highp vec3 basecol = vec3(0.792156994342803955078125, 0.8196079730987548828125, 0.93725502490997314453125);
    highp float roughness = 0.4107443392276763916015625;
    highp float metallic = 0.0;
    highp float occlusion = 1.0;
    highp float specular = 0.67973864078521728515625;
    n /= vec3((abs(n.x) + abs(n.y)) + abs(n.z));
    highp vec2 _97;
    if (n.z >= 0.0)
    {
        _97 = n.xy;
    }
    else
    {
        _97 = octahedronWrap(n.xy);
    }
    n = vec3(_97.x, _97.y, n.z);
    gl_out[0].gl_FragData = vec4(n.xy, roughness, packFloatInt16(metallic, 0u));
    gl_out[1].gl_FragData = vec4(basecol, packFloat2(occlusion, specular));
}

