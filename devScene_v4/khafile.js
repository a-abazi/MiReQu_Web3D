// Auto-generated
let project = new Project('devScene_v4');

project.addSources('Sources');
project.addLibrary("C:/ArmorySDK/armory");
project.addLibrary("C:/ArmorySDK/iron");
project.addLibrary("mynodes");
project.addLibrary("C:/ArmorySDK/lib/haxebullet");
project.addAssets("C:/ArmorySDK/lib/haxebullet/ammo/ammo.wasm.js", { notinlist: true });
project.addAssets("C:/ArmorySDK/lib/haxebullet/ammo/ammo.wasm.wasm", { notinlist: true });
project.addParameter('arm.Mirror_v4');
project.addParameter("--macro keep('arm.Mirror_v4')");
project.addParameter('arm.PumpLaser');
project.addParameter("--macro keep('arm.PumpLaser')");
project.addParameter('arm.Waveplate_quarter_v2');
project.addParameter("--macro keep('arm.Waveplate_quarter_v2')");
project.addParameter('arm.PolBeamSplitter_v1');
project.addParameter("--macro keep('arm.PolBeamSplitter_v1')");
project.addParameter('arm.Color_trait');
project.addParameter("--macro keep('arm.Color_trait')");
project.addParameter('armory.trait.internal.Bridge');
project.addParameter("--macro keep('armory.trait.internal.Bridge')");
project.addParameter('arm.BeamSplitter_v1');
project.addParameter("--macro keep('arm.BeamSplitter_v1')");
project.addParameter('arm.node.Genral_Object_properties_blocking');
project.addParameter("--macro keep('arm.node.Genral_Object_properties_blocking')");
project.addParameter('arm.BBO_v1');
project.addParameter("--macro keep('arm.BBO_v1')");
project.addParameter('arm.LinearPolarizer');
project.addParameter("--macro keep('arm.LinearPolarizer')");
project.addParameter('armory.trait.internal.DebugConsole');
project.addParameter("--macro keep('armory.trait.internal.DebugConsole')");
project.addParameter('arm.NewUI');
project.addParameter("--macro keep('arm.NewUI')");
project.addParameter('armory.trait.physics.bullet.RigidBody');
project.addParameter("--macro keep('armory.trait.physics.bullet.RigidBody')");
project.addParameter('arm.Beam_Control_v5');
project.addParameter("--macro keep('arm.Beam_Control_v5')");
project.addParameter('arm.Waveplate_half_v2');
project.addParameter("--macro keep('arm.Waveplate_half_v2')");
project.addParameter('arm.node.Movement_Rotation_central');
project.addParameter("--macro keep('arm.node.Movement_Rotation_central')");
project.addParameter('arm.node.Genral_Object_properties_interactive');
project.addParameter("--macro keep('arm.node.Genral_Object_properties_interactive')");
project.addParameter('armory.trait.physics.bullet.PhysicsWorld');
project.addParameter("--macro keep('armory.trait.physics.bullet.PhysicsWorld')");
project.addShaders("build_DevScene_Laser/compiled/Shaders/*.glsl", { noembed: false});
project.addShaders("build_DevScene_Laser/compiled/Hlsl/*.glsl", { noprocessing: true, noembed: false });
project.addAssets("build_DevScene_Laser/compiled/Assets/**", { notinlist: true });
project.addAssets("build_DevScene_Laser/compiled/Shaders/*.arm", { notinlist: true });
project.addAssets("Bundled/canvas/Canvas_InGame.files", { notinlist: true });
project.addAssets("Bundled/canvas/Canvas_InGame.json", { notinlist: true });
project.addAssets("Bundled/canvas/MyCanvas.files", { notinlist: true });
project.addAssets("Bundled/canvas/MyCanvas.json", { notinlist: true });
project.addAssets("Bundled/canvas/_themes.json", { notinlist: true });
project.addAssets("C:/ArmorySDK/armory/Assets/brdf.png", { notinlist: true });
project.addAssets("C:/ArmorySDK/armory/Assets/smaa_area.png", { notinlist: true });
project.addAssets("C:/ArmorySDK/armory/Assets/smaa_search.png", { notinlist: true });
project.addShaders("C:/ArmorySDK/armory/Shaders/debug_draw/**");
project.addLibrary("C:/ArmorySDK/lib/zui");
project.addAssets("C:/ArmorySDK/armory/Assets/font_default.ttf", { notinlist: false });
project.addDefine('arm_deferred');
project.addDefine('arm_csm');
project.addDefine('rp_hdr');
project.addDefine('rp_renderer=Deferred');
project.addDefine('rp_shadowmap');
project.addDefine('rp_shadowmap_cascade=1024');
project.addDefine('rp_shadowmap_cube=512');
project.addDefine('rp_background=World');
project.addDefine('rp_render_to_texture');
project.addDefine('rp_compositornodes');
project.addDefine('rp_antialiasing=SMAA');
project.addDefine('rp_supersampling=1');
project.addDefine('rp_ssgi=SSAO');
project.addDefine('rp_overlays');
project.addDefine('rp_translucency');
project.addDefine('arm_audio');
project.addDefine('arm_physics');
project.addDefine('arm_bullet');
project.addDefine('arm_noembed');
project.addDefine('arm_soundcompress');
project.addDefine('arm_debug');
project.addDefine('arm_ui');
project.addDefine('arm_skin');
project.addDefine('arm_particles');


resolve(project);
